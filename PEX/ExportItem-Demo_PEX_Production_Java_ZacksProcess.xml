<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for UNIX (Ubuntu Server LTS for x86-64 Containers) 2020.1 (Build 192U)" ts="2020-01-23 22:56:52">
<Class name="Demo.SampleMap">
<Description>
RECORDMAP: Modified during compilation of RecordMap 'Demo.SampleMap'
on 2020-01-22 at 21:04:35.271 [2020-01-22 21:04:35.271 UTC]
by user SuperUser</Description>
<Super>EnsLib.RecordMap.RecordMap</Super>
<TimeChanged>65401,82193.833727</TimeChanged>
<TimeCreated>65401,82193.833727</TimeCreated>

<Parameter name="OBJECTNAME">
<Default>Demo.SampleMap.Record</Default>
</Parameter>

<Method name="GetObject">
<Description>
Method to retrieve a record from a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,*pObject:%RegisteredObject,pTimeout:%Numeric=-1,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		Set pObject = $$$NULLOREF
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$$ERROR($$$CannotCreateObject,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$$ERROR($$$EnsRecordMapErrStreamAtEnd, pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"

		#; Parse incoming stream
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If $$$ISERR(tStatus) { Set pObject = $$$NULLOREF }
	Else { Set pObject = tObject }
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutObject">
<Description>
Method to write a record to a stream or device. This method will be generated based on the
structure of the RecordMap. For testing purposes, a file name may be passed in the pStream argument.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pFlush:%Boolean=1,&pPadArray:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Try {
		Set tStatus = $$$OK
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If $$$ISERR(tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"

		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If $$$ISERR(tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If $$$ISERR(tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetRecord">
<Description>
Internal helper method to perform parse of incoming data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pGetTopFields:%Boolean,pTimeout:%Numeric,&pLookAhead:%String="",pLabelFound:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, "", tRecLabel, .pLookAhead, "")
	If $$$ISERR(tStatus) Quit tStatus
	Set tMaxLocal = $$$MaxLocalLength
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(124))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(124), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(124), .tTopPiece)
	If pGetTopFields {
		Set pObject.Name = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(124), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(124), .tTopPiece)
	If pGetTopFields {
		Set pObject.Phone = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(124), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(124), .tTopPiece)
	If pGetTopFields {
		Set pObject.Company = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(124), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(124), .tTopPiece)
	If pGetTopFields {
		Set pObject.City = tCurrString
	}
	Quit tStatus
]]></Implementation>
</Method>

<Method name="PutRecord">
<Description>
Internal helper method to output object to a stream</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pStream:%IO.DeviceStream,pObject:%RegisteredObject,pHasTopFields:%Boolean,&pPadArray:%String]]></FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tStatus = $$$OK
	Do pStream.Write($select(pHasTopFields: pObject.Name,1: ""),0)
	Do pStream.Write($char(124) _ $select(pHasTopFields: pObject.Phone,1: ""),0)
	Do pStream.Write($char(124) _ $select(pHasTopFields: pObject.Company,1: ""),0)
	Do pStream.Write($char(124) _ $select(pHasTopFields: pObject.City,1: ""),0)
	Quit tStatus
]]></Implementation>
</Method>

<Method name="GetGeneratedClasses">
<ClassMethod>1</ClassMethod>
<FormalSpec>*pClasses:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill pClasses
	Set pClasses("Demo.SampleMap.Record")=""
	Set pClasses($classname())=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getIdentifier">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[""
]]></Implementation>
</Method>

<Method name="getType">
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<ReturnType>EnsLib.RecordMap.Model.DataType.RecordType</ReturnType>
<Implementation><![CDATA["delimited"
]]></Implementation>
</Method>

<XData name="RecordMap">
<XMLNamespace>http://www.intersystems.com/Ensemble/RecordMap</XMLNamespace>
<Data><![CDATA[
<Record xmlns="http://www.intersystems.com/Ensemble/RecordMap" name="Demo.SampleMap" type="delimited" char_encoding="UTF-8" targetClassname="Demo.SampleMap.Record" complexBatchManaged="0" padFromLeft="0" allowEarlyTerminator="0">
  <Separators>
    <Separator>|</Separator>
  </Separators>
  <Field name="Name" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Phone" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="Company" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
  <Field name="City" required="0" ignored="0" datatype="%String" repeating="0">
  </Field>
</Record>
]]></Data>
</XData>
</Class>


<Class name="Demo.SampleMap.Record">
<Description>
RECORDMAP: Generated from RecordMap 'Demo.SampleMap'
on 2020-01-22 at 21:04:35.227 [2020-01-22 21:04:35.227 UTC]
by user SuperUser</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent,%XML.Adaptor,Ens.Request,EnsLib.RecordMap.Base,EnsLib.PEX.Message</Super>
<TimeChanged>65401,82193.840756</TimeChanged>
<TimeCreated>65401,82193.840756</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="INCLUDETOPFIELDS">
<Default>1</Default>
</Parameter>

<Property name="Name">
<Type>%String</Type>
</Property>

<Property name="Phone">
<Type>%String</Type>
</Property>

<Property name="Company">
<Type>%String</Type>
</Property>

<Property name="City">
<Type>%String</Type>
</Property>

<Parameter name="RECORDMAPGENERATED">
<Default>1</Default>
</Parameter>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^Demo.SampleMap.RecordD</DataLocation>
<DefaultData>RecordDefaultData</DefaultData>
<IdLocation>^Demo.SampleMap.RecordD</IdLocation>
<IndexLocation>^Demo.SampleMap.RecordI</IndexLocation>
<StreamLocation>^Demo.SampleMap.RecordS</StreamLocation>
<ExtentSize>2000000</ExtentSize>
<Data name="%jsonObject">
<Attribute>%jsonObject</Attribute>
<Structure>node</Structure>
<Subscript>"%jsonObject"</Subscript>
</Data>
<Data name="RecordDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Name</Value>
</Value>
<Value name="3">
<Value>%Source</Value>
</Value>
<Value name="4">
<Value>Company</Value>
</Value>
<Value name="5">
<Value>City</Value>
</Value>
<Value name="6">
<Value>Phone</Value>
</Value>
<Value name="7">
<Value>%classname</Value>
</Value>
</Data>
</Storage>
</Class>


<Project name="EnsExportItem_2020-01-23 22-55-49_430+0" LastModified="2020-01-23 22:56:52.927971">
  <ProjectDescription>Studio Project generated starting from Production Configuration Item 'Demo.ZacksProd : EnsLib.PEX.BusinessProcess' at 2020-01-23 22:55:49.430 UTC</ProjectDescription>
  <Items>
    <ProjectItem name="Demo.SampleMap" type="CLS"></ProjectItem>
    <ProjectItem name="Demo.SampleMap.Record" type="CLS"></ProjectItem>
    <ProjectItem name="ProductionSettings:Demo.ZacksProd.PTD" type="PTD"></ProjectItem>
    <ProjectItem name="Settings:EnsLib.PEX.BusinessProcess.PTD" type="PTD"></ProjectItem>
    <ProjectItem name="Settings:EnsLib.RecordMap.Service.FileService.PTD" type="PTD"></ProjectItem>
    <ProjectItem name="EnsExportNotes.EnsExportItem_2020-01-23 22-55-49_430+0.PTD" type="PTD"></ProjectItem>
  </Items>
</Project>


<Document name="EnsExportNotes.EnsExportItem_2020-01-23 22-55-49_430+0.PTD"><ProjectTextDocument name="EnsExportNotes.EnsExportItem_2020-01-23 22-55-49_430+0" description="Export Notes for export EnsExportItem_2020-01-23 22-55-49_430+0">
<![CDATA[<Deployment>
<Creation>
<Machine>42A7174784AF</Machine>
<Instance>IRIS</Instance>
<Namespace>INTEROP</Namespace>
<SourceProduction>Demo.ZacksProd</SourceProduction>
<Username>SuperUser</Username>
<UTC>2020-01-23 22:56:52.923</UTC>
</Creation>
<Notes>
</Notes>
<Contents>
<ExportProject>EnsExportItem_2020-01-23 22-55-49_430+0</ExportProject>
<Item num="1">Demo.SampleMap.CLS</Item>
<Item num="2">Demo.SampleMap.Record.CLS</Item>
<Item num="3">ProductionSettings:Demo.ZacksProd.PTD</Item>
<Item num="4">Settings:EnsLib.PEX.BusinessProcess.PTD</Item>
<Item num="5">Settings:EnsLib.RecordMap.Service.FileService.PTD</Item>
</Contents>
<ProductionClassInExport></ProductionClassInExport>
</Deployment>

]]></ProjectTextDocument>
</Document>

<Document name="ProductionSettings:Demo.ZacksProd.PTD"><ProjectTextDocument name="ProductionSettings:Demo.ZacksProd" description="Settings for production Demo.ZacksProd">
<![CDATA[<Production Name='Demo.ZacksProd' LogGeneralTraceEvents='false'><Description/><ActorPoolSize>2</ActorPoolSize></Production>
]]></ProjectTextDocument>
</Document>

<Document name="Settings:EnsLib.PEX.BusinessProcess.PTD"><ProjectTextDocument name="Settings:EnsLib.PEX.BusinessProcess" description="Settings for EnsLib.PEX.BusinessProcess in Production Demo.ZacksProd">
<![CDATA[<Item Name="EnsLib.PEX.BusinessProcess" Category="" ClassName="EnsLib.PEX.BusinessProcess" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule=""><Setting Target="Host" Name="%remoteClassname">com.intersystems.demo.pex.ZacksProcess</Setting><Setting Target="Host" Name="%remoteSettings">/datavol/PEX/Java/src/lib/intersystems-gateway-3.0.0.jar:/datavol/PEX/Java/src/lib/intersystems-jdbc-3.0.0.jar:/datavol/PEX/Java/bin:/datavol/PEX/bin/jackson/jackson-annotations-2.9.6.jar:/datavol/PEX/bin/jackson/jackson-core-2.9.6.jar:/datavol/PEX/bin/jackson/jackson-databind-2.9.6.jar</Setting></Item>
]]></ProjectTextDocument>
</Document>

<Document name="Settings:EnsLib.RecordMap.Service.FileService.PTD"><ProjectTextDocument name="Settings:EnsLib.RecordMap.Service.FileService" description="Settings for EnsLib.RecordMap.Service.FileService in Production Demo.ZacksProd">
<![CDATA[<Item Name="EnsLib.RecordMap.Service.FileService" Category="" ClassName="EnsLib.RecordMap.Service.FileService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule=""><Setting Target="Host" Name="RecordMap">Demo.SampleMap</Setting><Setting Target="Adapter" Name="FilePath">/datavol/data/in/</Setting><Setting Target="Host" Name="TargetConfigNames">EnsLib.PEX.BusinessProcess</Setting></Item>
]]></ProjectTextDocument>
</Document></Export>
